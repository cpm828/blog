<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pimi&#39;s Blog</title>
  
  <subtitle>A lazy youth, a lousy age.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pimichen.com/"/>
  <updated>2018-12-24T06:59:32.407Z</updated>
  <id>http://pimichen.com/</id>
  
  <author>
    <name>Pimi Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js执行机制</title>
    <link href="http://pimichen.com/javascript/js%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6.html"/>
    <id>http://pimichen.com/javascript/js执行机制.html</id>
    <published>2018-12-24T06:47:50.075Z</published>
    <updated>2018-12-24T06:59:32.407Z</updated>
    
    <content type="html"><![CDATA[<p>抛出问题，输出下列程序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function()&#123;</span><br><span class="line">    console.log(&apos;定时器开始啦&apos;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">new Promise(function(resolve)&#123;</span><br><span class="line">    console.log(&apos;马上执行for循环啦&apos;);</span><br><span class="line">    for(var i = 0; i &lt; 10000; i++)&#123;</span><br><span class="line">        i == 99 &amp;&amp; resolve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(function()&#123;</span><br><span class="line">    console.log(&apos;执行then函数啦&apos;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">console.log(&apos;代码执行结束&apos;);</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">马上执行for循环啦</span><br><span class="line">代码执行结束</span><br><span class="line">执行then函数啦</span><br><span class="line">定时器开始啦</span><br></pre></td></tr></table></figure><blockquote><p>内部执行机制查看<a href="https://juejin.im/post/59e85eebf265da430d571f89" target="_blank" rel="noopener">掘金 ssssyoki</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      这一次，彻底弄懂 JavaScript 执行机制
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>jquery封装插件</title>
    <link href="http://pimichen.com/jquery/jquery%E5%B0%81%E8%A3%85%E6%8F%92%E4%BB%B6.html"/>
    <id>http://pimichen.com/jquery/jquery封装插件.html</id>
    <published>2018-12-17T06:43:21.021Z</published>
    <updated>2018-12-17T07:42:09.906Z</updated>
    
    <content type="html"><![CDATA[<p>使用jQuery封装插件，此处我们只讲jquery的导入方法，不去理会import和export的导入导出，常见的如下：</p><h2 id="通用方法封装"><a href="#通用方法封装" class="headerlink" title="通用方法封装"></a>通用方法封装</h2><ul><li><p>封装plugin1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">root</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> YQ = &#123;&#125;;</span><br><span class="line">    <span class="comment">//  设置cookie</span></span><br><span class="line">    YQ.setCookie =  <span class="function"><span class="keyword">function</span>(<span class="params">name, value, day</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> Days = day || <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        exp.setTime(exp.getTime() + Days * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">        <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + <span class="string">";expires="</span> + exp.toGMTString();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取cookie</span></span><br><span class="line">    YQ.getCookie = <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> arr, reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>);</span><br><span class="line">        <span class="keyword">if</span>(arr=<span class="built_in">document</span>.cookie.match(reg))</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  获取链接参数</span></span><br><span class="line">    YQ.getQuery =  <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> svalue = location.search.match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'[\?\&amp;]'</span> + item + <span class="string">'=([^\&amp;]*)(\&amp;?)'</span>, <span class="string">'i'</span>));</span><br><span class="line">        <span class="keyword">return</span> svalue ? <span class="built_in">decodeURIComponent</span>(svalue[<span class="number">1</span>]) : <span class="string">''</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> root === <span class="string">"undefined"</span>)&#123;</span><br><span class="line">        root = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> root[<span class="string">'YQ'</span>] === <span class="string">'undefined'</span>)&#123;</span><br><span class="line">        root.YQ = YQ;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        YQ.extend(root.YQ, YQ);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd)&#123;</span><br><span class="line">        define([], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">            'use strict'</span>;</span><br><span class="line">            <span class="keyword">return</span> root.YQ;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span>)&#123;</span><br><span class="line">        <span class="built_in">module</span>.exports = root.YQ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(<span class="built_in">window</span>));</span><br></pre></td></tr></table></figure></li><li><p>导入plugin1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"lib/plugin1.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>使用plugin1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入之后，可以直接使用YQ当中的任何方法</span></span><br><span class="line"></span><br><span class="line">YQ.getQuery(<span class="string">'a'</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="常见的插件封装"><a href="#常见的插件封装" class="headerlink" title="常见的插件封装"></a>常见的插件封装</h2><h3 id="一般封装"><a href="#一般封装" class="headerlink" title="一般封装"></a>一般封装</h3><ul><li><p>封装plugin2</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装插件demo</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自调用匿名函数包裹（块级作用域）</span></span><br><span class="line"><span class="comment">// 前面的;符号 的作用：分割代码，防止代码再合并压缩时出错</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * @param el: dom 元素</span></span><br><span class="line"><span class="comment">     * @param opt: 传入的配置项参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">var</span> testObj = <span class="function"><span class="keyword">function</span> (<span class="params">el, opt</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.$element = el;</span><br><span class="line">        <span class="keyword">this</span>.defaults = &#123;</span><br><span class="line">            <span class="string">'color'</span>: <span class="string">'red'</span>,</span><br><span class="line">            <span class="string">'fontSize'</span>: <span class="string">'12px'</span>,</span><br><span class="line">            <span class="string">'textDecoration'</span>: <span class="string">'none'</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">this</span>.options = $.extend(&#123;&#125;, <span class="keyword">this</span>.defaults, opt); <span class="comment">// 拼接传入参数和默认参数</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义方法</span></span><br><span class="line">    testObj.prototype = &#123;</span><br><span class="line">        changeClass: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.$element.css(&#123;</span><br><span class="line">                <span class="string">'color'</span>: <span class="keyword">this</span>.options.color,</span><br><span class="line">                <span class="string">'fontSize'</span>: <span class="keyword">this</span>.options.fontSize,</span><br><span class="line">                <span class="string">'textDecoration'</span>: <span class="keyword">this</span>.options.textDecoration</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        methodA: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// ***</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methodB: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// ***</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用方法</span></span><br><span class="line">    $.fn.myPlugin2 = <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 创建实体</span></span><br><span class="line">        <span class="keyword">var</span> testIndividual = <span class="keyword">new</span> testObj(<span class="keyword">this</span>, options);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用方法</span></span><br><span class="line">        <span class="keyword">return</span> testIndividual.changeClass();</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></li><li><p>导入plugin2</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">id</span>=<span class="string">"testDom2"</span>&gt;</span>plugin2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"lib/plugin2.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用plugin2</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#testDom2'</span>).myPlugin2(&#123;</span><br><span class="line">    <span class="string">'color'</span>: <span class="string">'blue'</span>,</span><br><span class="line">    <span class="string">'fontSize'</span>: <span class="string">'20px'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用-fn-a"><a href="#使用-fn-a" class="headerlink" title="使用$.fn.a"></a>使用$.fn.a</h3><p>使用$.fn.a(a表示方法名)逐一封装方法，可以写多个</p><ul><li><p>封装plugin3.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.fn.myPlugin3 = <span class="function"><span class="keyword">function</span> (<span class="params">opt</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> defaults = &#123;</span><br><span class="line">            Event: <span class="string">'click'</span>,</span><br><span class="line">            msg: <span class="string">'Hello World'</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> options = $.extend(defaults, opt);</span><br><span class="line">        <span class="comment">// var $this = $(this);</span></span><br><span class="line">        <span class="keyword">var</span> $<span class="keyword">this</span> = <span class="keyword">this</span>; <span class="comment">// fn中的this已经是个jquery对象，无需使用$(this)来获取</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定事件</span></span><br><span class="line">        $<span class="keyword">this</span>.on(options.Event, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            alert(options.msg);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></li><li><p>导入plugin3</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"testDom3"</span>&gt;</span>plugin3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"lib/plugin3.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用plugin3</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#testDom3'</span>).myPlugin3(&#123;</span><br><span class="line">    Event: <span class="string">'click'</span>,</span><br><span class="line">    msg: <span class="string">'12112'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用-fn-extend"><a href="#使用-fn-extend" class="headerlink" title="使用$.fn.extend"></a>使用$.fn.extend</h3><p>使用$.fn.extend可以同时注册多个方法</p><ul><li><p>封装plugin4</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.fn.extend(&#123;</span><br><span class="line">        check: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.checked = <span class="literal">true</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        uncheck: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.checked = <span class="literal">false</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></li><li><p>导入plugin4</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"lib/plugin4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>导入plugin4</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"input[type='checkbox']"</span> ).check();</span><br><span class="line"></span><br><span class="line">$(<span class="string">"input[type='checkbox']"</span> ).uncheck();</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用-fn-a传参（方法名）"><a href="#使用-fn-a传参（方法名）" class="headerlink" title="使用$.fn.a传参（方法名）"></a>使用$.fn.a传参（方法名）</h3><p>使用$.fn.a传参来注册多个方法</p><ul><li><p>封装plugin5</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// $.fn.tooltip = function (options) &#123;</span></span><br><span class="line">        <span class="comment">// this</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="comment">// $.fn.tooltipShow = function () &#123;</span></span><br><span class="line">        <span class="comment">// is</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="comment">// $.fn.tooltipHide = function () &#123;</span></span><br><span class="line">        <span class="comment">// bad</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">    <span class="comment">// $.fn.tooltipUpdate = function (content) &#123;</span></span><br><span class="line">        <span class="comment">// !!!</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上面的方式是不被鼓励的写法，会使$.fn命名空间混乱，可以收集所有方法，通过传参来调用它们</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> methods = &#123;</span><br><span class="line">        init: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        show: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        hide: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        update: <span class="function"><span class="keyword">function</span> (<span class="params">content</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    $.fn.tooltip = <span class="function"><span class="keyword">function</span>(<span class="params">methods</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (methods[method]) &#123;</span><br><span class="line">            <span class="keyword">return</span> methods[method].apply(<span class="keyword">this</span>, <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> method === <span class="string">'object'</span> || !method) &#123;</span><br><span class="line">            <span class="keyword">return</span> methods.init.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $.error(<span class="string">'Method'</span> + method + <span class="string">'does not exist on jQuery.tooltip'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(jQuery);</span><br></pre></td></tr></table></figure></li><li><p>导入plugin5</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"lib/plugin5.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用plugin5</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用init方法（无参数）:</span></span><br><span class="line">$(<span class="string">'div'</span>).tooltip();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用init方法（带参数）:</span></span><br><span class="line">$(<span class="string">'div'</span>).tooltip(&#123;</span><br><span class="line">    foo: <span class="string">'bar'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用hide方法:</span></span><br><span class="line">$(<span class="string">'div'</span>).tooltip(<span class="string">'hide'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用update方法:</span></span><br><span class="line">$(<span class="string">'div'</span>).tooltip(<span class="string">'update'</span>, <span class="string">'****'</span>);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      jQuery封装通用的插件
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
      <category term="jQuery" scheme="http://pimichen.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>windows系统端口占用解决办法</title>
    <link href="http://pimichen.com/tools/windows%E7%94%B5%E8%84%91%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html"/>
    <id>http://pimichen.com/tools/windows电脑端口占用解决办法.html</id>
    <published>2018-11-05T02:52:38.485Z</published>
    <updated>2018-11-05T02:56:27.854Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、查看端口对应的PID（最后一项）</span><br><span class="line">  netstat -ano |findstr &quot;8081&quot;</span><br><span class="line"></span><br><span class="line">2、查看PID对应的应用程序</span><br><span class="line">  tasklist |findstr &quot;PID&quot;</span><br><span class="line"></span><br><span class="line">3、杀掉该应用程序的进程</span><br><span class="line">  taskkill /f /t /im &quot;java.exe&quot;</span><br></pre></td></tr></table></figure><p>注：必须使用window的 cmd 窗口来运行程序，某些应用的内置终端无法运行</p>]]></content>
    
    <summary type="html">
    
      解决windows系统端口占用的命令
    
    </summary>
    
    
      <category term="Tools" scheme="http://pimichen.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>js动态插入link标签</title>
    <link href="http://pimichen.com/javascript/js%E5%8A%A8%E6%80%81%E6%8F%92%E5%85%A5css%E6%A0%B7%E5%BC%8F%E6%A0%87%E7%AD%BE.html"/>
    <id>http://pimichen.com/javascript/js动态插入css样式标签.html</id>
    <published>2018-09-29T08:06:03.971Z</published>
    <updated>2018-09-29T08:07:19.468Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> includeCss = <span class="function"><span class="keyword">function</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> link = <span class="built_in">document</span>.createElement(<span class="string">"link"</span>);</span><br><span class="line">  link.rel = <span class="string">"stylesheet"</span>;</span><br><span class="line">  link.type = <span class="string">"text/css"</span>;</span><br><span class="line">  link.href = url;</span><br><span class="line">  <span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(link)</span><br><span class="line">&#125;;</span><br><span class="line">includeCss(<span class="string">"./css/Mdate.css"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      js动态插入link标签，通过js来加载样式
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>js判断字符串是否是时间格式</title>
    <link href="http://pimichen.com/javascript/js%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%98%AF%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F.html"/>
    <id>http://pimichen.com/javascript/js判断字符串是否是时间格式.html</id>
    <published>2018-09-29T06:42:35.555Z</published>
    <updated>2018-09-29T06:43:09.237Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isDateString = <span class="function">(<span class="params">sDate</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> mp = <span class="regexp">/\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;/</span>,</span><br><span class="line">    matchArray = sDate.match(mp);</span><br><span class="line">  <span class="keyword">if</span> (matchArray === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> iaMonthDays = [<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>];</span><br><span class="line">  <span class="keyword">let</span> iaDate = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span><br><span class="line">  iaDate = sDate.split(<span class="string">'-'</span>);</span><br><span class="line">  <span class="keyword">const</span> year = <span class="built_in">parseFloat</span>(iaDate[<span class="number">0</span>]),</span><br><span class="line">    month = <span class="built_in">parseFloat</span>(iaDate[<span class="number">1</span>]),</span><br><span class="line">    day = <span class="built_in">parseFloat</span>(iaDate[<span class="number">2</span>]);</span><br><span class="line">  <span class="keyword">if</span> (year &lt; <span class="number">1900</span> || year &gt; <span class="number">2100</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (((year % <span class="number">4</span> === <span class="number">0</span>) &amp;&amp; (year % <span class="number">100</span> !== <span class="number">0</span>)) || (year % <span class="number">400</span> === <span class="number">0</span>)) iaMonthDays[<span class="number">1</span>] = <span class="number">29</span>;</span><br><span class="line">  <span class="keyword">if</span> (month &lt; <span class="number">1</span> || month &gt; <span class="number">12</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (day &lt; <span class="number">1</span> || day &gt; iaMonthDays[month - <span class="number">1</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      js判断字符串是否是时间格式YYYY-mm-dd
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>canvas将图片和文本合成图片</title>
    <link href="http://pimichen.com/javascript/canvas%E5%90%88%E6%88%90%E5%9B%BE%E7%89%87%E5%92%8C%E6%96%87%E6%9C%AC.html"/>
    <id>http://pimichen.com/javascript/canvas合成图片和文本.html</id>
    <published>2018-09-14T10:04:11.790Z</published>
    <updated>2018-09-14T10:10:15.538Z</updated>
    
    <content type="html"><![CDATA[<p>需求为：将一张图片和用户输入的文字（居中显示，且超出指定宽度显示…）合成一张新的图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"posterCanvas"</span> <span class="attr">width</span>=<span class="string">"240"</span> <span class="attr">height</span>=<span class="string">"180"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">用户输入的文本：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"inputText"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"convertBtn"</span>&gt;</span>合成图片<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> convertBtn = <span class="built_in">document</span>.getElementById(<span class="string">'convertBtn'</span>);</span><br><span class="line">  convertBtn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    drawCanvasDefaultPoster();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">drawCanvasDefaultPoster</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> inputText = <span class="built_in">document</span>.getElementById(<span class="string">'inputText'</span>),</span><br><span class="line">      posterCanvas = <span class="built_in">document</span>.getElementById(<span class="string">'posterCanvas'</span>),</span><br><span class="line">      posterContext = posterCanvas.getContext(<span class="string">'2d'</span>),</span><br><span class="line">      posterCanvasWidth = posterCanvas.width,</span><br><span class="line">      posterCanvasHeight = posterCanvas.height,</span><br><span class="line">      posterDefaultImg = <span class="keyword">new</span> Image();</span><br><span class="line"></span><br><span class="line">    posterDefaultImg.src = <span class="string">'https://cdn-portrait.test.17zuoye.net//public/skin/teacher_coursewarev2/images/upload_example.png'</span>;</span><br><span class="line">    posterDefaultImg.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      posterContext.drawImage(posterDefaultImg, <span class="number">0</span>, <span class="number">0</span>, posterCanvasWidth, posterCanvasHeight); <span class="comment">// 填充图片</span></span><br><span class="line"></span><br><span class="line">      posterContext.font = <span class="string">'16px MicrosoftYaHei'</span>; <span class="comment">// 填充title</span></span><br><span class="line">      posterContext.textAlign = <span class="string">'center'</span>;</span><br><span class="line">      <span class="comment">// posterContext.fillText(inputText.value, 120, 114); // 如不处理限制文本宽度，直接绘制即可</span></span><br><span class="line">      <span class="keyword">var</span> wordWidth = <span class="number">0</span>; <span class="comment">// 字符宽度</span></span><br><span class="line">      <span class="keyword">var</span> inputValue = inputText.value; <span class="comment">// 操作的title</span></span><br><span class="line">      <span class="keyword">if</span> (posterContext.measureText(inputValue).width &lt; <span class="number">190</span>) &#123; <span class="comment">// title小于最大宽度，直接绘制</span></span><br><span class="line">          posterContext.fillText(inputValue, <span class="number">120</span>, <span class="number">114</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123; <span class="comment">// title大于最大宽度则需要截取绘制</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; inputValue.length; i++) &#123; <span class="comment">// 遍历，根据当前的文本长度是否大于指定宽度，来截取</span></span><br><span class="line">              wordWidth += posterContext.measureText(inputValue[i]).width; <span class="comment">// 逐渐追加的文本宽度</span></span><br><span class="line">              <span class="keyword">if</span> (wordWidth &gt; <span class="number">190</span>) &#123; <span class="comment">// 指定（190 + '...'）</span></span><br><span class="line">                  posterContext.fillText(inputValue.substring(<span class="number">0</span>, i) + <span class="string">'...'</span>, <span class="number">120</span>, <span class="number">114</span>);</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">var</span> base64Url = posterCanvas.toDataURL(<span class="string">'image/jpeg'</span>, <span class="number">1.0</span>); <span class="comment">// toBase64</span></span><br><span class="line">      <span class="comment">// 此处取到base64就可以用了，如传给后端等</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">// 如何限定宽度： https://blog.csdn.net/lishihong108/article/details/52483867?ref=myread</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      canvas将图片和文本（超出指定宽度隐藏，且居中显示）合成新的图片
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>移动端吸顶效果</title>
    <link href="http://pimichen.com/javascript/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%90%B8%E9%A1%B6%E6%95%88%E6%9E%9C.html"/>
    <id>http://pimichen.com/javascript/移动端吸顶效果.html</id>
    <published>2018-08-21T07:59:46.365Z</published>
    <updated>2018-12-20T02:38:48.990Z</updated>
    
    <content type="html"><![CDATA[<p>在开发移动端的时候，经常需要对tab做吸顶效果处理。</p><p>吐槽一下~ 有些程序员明知道增加吸顶效果对用户更加友好却嫌麻烦不加，非得产品经理提需求。</p><p>一个好的程序员应该再看见tab的时候就会想到这些，而不用等产品经理来提醒。开发产品的时候应该多站在用户的角度去思考问题，而不是首先考虑代码的实现。</p><p>好了，废话不多说，开始看代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-content"</span> <span class="attr">id</span>=<span class="string">"tabContent"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab-box"</span> <span class="attr">id</span>=<span class="string">"tabBox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>精选<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>推荐<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>活动<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ua = <span class="built_in">window</span>.navigator.userAgent.toLowerCase();</span><br><span class="line"><span class="keyword">var</span> isIos = <span class="regexp">/iphone|ipod|ipad/ig</span>.test(ua)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isIos) &#123; <span class="comment">// iOS使用 sticky属性</span></span><br><span class="line">  $(<span class="string">'#tabContent'</span>).addClass(<span class="string">'position-sticky'</span>); <span class="comment">// 操作外层</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> tabOffsetTop = $(<span class="string">'#tabBox'</span>).offset().top; <span class="comment">// tab 距离头部的高度（定值）</span></span><br><span class="line">  $(<span class="built_in">window</span>).on(<span class="string">'scroll'</span>, () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> scrollTop = $(<span class="built_in">window</span>).scrollTop(); <span class="comment">// 当前滚动条的高度（变值）</span></span><br><span class="line">    <span class="keyword">if</span> (scrollTop &gt;= tabOffsetTop) &#123;</span><br><span class="line">      $(<span class="string">'#tabBox'</span>).addClass(<span class="string">'position-fix'</span>); <span class="comment">// 安卓操作内层div，外层div用于占位（此处占位的div很有必须）</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(<span class="string">'#tabBox'</span>).removeClass(<span class="string">'position-fix'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特别提示：安卓在滚动顶部的时候设置为fix定位，此时必须有个div占位，否则占位突然消失，可能会造成bug</p><p>完整代码如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1, user-scalable=0, minimal-ui"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>移动端吸顶效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    * &#123;</span></span><br><span class="line"><span class="undefined">      margin: 0;</span></span><br><span class="line"><span class="undefined">      padding: 0;</span></span><br><span class="line"><span class="undefined">      box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.banner</span>&#123;</span></span><br><span class="line"><span class="undefined">      height: 160px;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#eee</span>;</span></span><br><span class="line"><span class="undefined">      margin-bottom: 20px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.tab-content</span>&#123;</span></span><br><span class="line"><span class="undefined">      width: 100%;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="undefined">      height: 50px;</span></span><br><span class="line"><span class="undefined">      margin-bottom: 20px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.tab-box</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="undefined">      width: 100%;</span></span><br><span class="line"><span class="undefined">      overflow: hidden;</span></span><br><span class="line"><span class="undefined">      height: 50px;</span></span><br><span class="line"><span class="undefined">      line-height: 50px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.tab-box</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="undefined">      display: inline-block;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span>: 33<span class="selector-class">.33</span>%;</span></span><br><span class="line"><span class="undefined">      float: left;</span></span><br><span class="line"><span class="undefined">      text-align: center;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.main</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#eee</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.main</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="undefined">      line-height: 100px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.position-sticky</span>&#123;</span></span><br><span class="line"><span class="undefined">      position: -webkit-sticky;</span></span><br><span class="line"><span class="undefined">      position: sticky;</span></span><br><span class="line"><span class="undefined">      top: 0px;</span></span><br><span class="line"><span class="undefined">      z-index: 1;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.position-fix</span>&#123;</span></span><br><span class="line"><span class="undefined">      position: fixed;</span></span><br><span class="line"><span class="undefined">      left: 0;</span></span><br><span class="line"><span class="undefined">      top: 0px;</span></span><br><span class="line"><span class="undefined">      z-index: 1;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-content"</span> <span class="attr">id</span>=<span class="string">"tabContent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab-box"</span> <span class="attr">id</span>=<span class="string">"tabBox"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>精选<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>推荐<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>活动<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1sdsdsd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-2.1.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> ua = <span class="built_in">window</span>.navigator.userAgent.toLowerCase();</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> isIos = <span class="regexp">/iphone|ipod|ipad/ig</span>.test(ua);</span></span><br><span class="line"><span class="undefined">      </span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (isIos) &#123; <span class="comment">// iOS使用 sticky属性</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#tabContent'</span>).addClass(<span class="string">'position-sticky'</span>);</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tabOffsetTop = $(<span class="string">'#tabBox'</span>).offset().top; <span class="comment">// tab 距离头部的高度（定值）</span></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">window</span>).on(<span class="string">'scroll'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> scrollTop = $(<span class="built_in">window</span>).scrollTop(); <span class="comment">// 当前滚动条的高度（变值）</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (scrollTop &gt;= tabOffsetTop) &#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#tabBox'</span>).addClass(<span class="string">'position-fix'</span>); <span class="comment">// 安卓操作内层div，外层div用于占位</span></span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#tabBox'</span>).removeClass(<span class="string">'position-fix'</span>);</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      移动端自动吸顶效果，区分iOS和安卓
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
      <category term="jQuery" scheme="http://pimichen.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>js判断css属性兼容性</title>
    <link href="http://pimichen.com/javascript/js%E5%88%A4%E6%96%ADcss%E5%B1%9E%E6%80%A7%E5%85%BC%E5%AE%B9%E6%80%A7.html"/>
    <id>http://pimichen.com/javascript/js判断css属性兼容性.html</id>
    <published>2018-07-11T02:59:48.780Z</published>
    <updated>2018-12-20T02:42:59.593Z</updated>
    
    <content type="html"><![CDATA[<p>在css3兴起的今天，仍然有一些阻碍进步的机器在被使用中，web开发人员依然要痛苦的兼容它们。</p><p>我们可以在js中判断css属性是否可以正常使用，以便来正确的向下兼容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cssSupport: <span class="function"><span class="keyword">function</span> (<span class="params">attr, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> element = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">  <span class="keyword">if</span> (attr <span class="keyword">in</span> element.style) &#123;</span><br><span class="line">    element.style[attr] = value; <span class="comment">// 此处会直接设置</span></span><br><span class="line">    <span class="keyword">return</span> element.style[attr] === value;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例如我们检测css3的position:sticky的兼容性</span></span><br><span class="line"><span class="comment">// 需求，吸顶悬浮效果（向上滚动到顶部时，tab栏吸顶，向下离开顶部时tab又跟随页面移动）</span></span><br><span class="line">init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.cssSupport(<span class="string">'position'</span>, <span class="string">'sticky'</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 对于不支持position:sticky的还是走常规的监听scroll事件（mescroll插件中，iOS使用sticky属性，安卓走scroll监听）</span></span><br><span class="line">  $(<span class="string">'el_parent'</span>).on(<span class="string">'scroll'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (scrollTop &gt; topValue) &#123;</span><br><span class="line">      $el.style.position = <span class="string">'fixed'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $el.style.position = <span class="string">'relative'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      js判断css属性兼容性，是否可以是否，向下兼容
    
    </summary>
    
    
      <category term="CSS" scheme="http://pimichen.com/tags/css/"/>
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>markdown文件夹说明</title>
    <link href="http://pimichen.com/other/markdown%E6%96%87%E4%BB%B6%E5%A4%B9%E8%AF%B4%E6%98%8E.html"/>
    <id>http://pimichen.com/other/markdown文件夹说明.html</id>
    <published>2018-07-02T08:24:48.468Z</published>
    <updated>2018-07-12T09:40:04.178Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">├── base                                   // 定义游戏开发基础类</span><br><span class="line">│   ├── animatoin.js                       // 帧动画的简易实现</span><br><span class="line">│   ├── pool.js                            // 对象池的简易实现</span><br><span class="line">│   └── sprite.js                          // 游戏基本元素精灵类</span><br><span class="line">├── libs</span><br><span class="line">│   ├── symbol.js                          // ES6 Symbol简易兼容</span><br><span class="line">│   └── weapp-adapter.js                   // 小游戏适配器</span><br><span class="line">├── npc</span><br><span class="line">│   └── enemy.js                           // 敌机类</span><br><span class="line">├── player</span><br><span class="line">│   ├── bullet.js                          // 子弹类</span><br><span class="line">│   └── index.js                           // 玩家类</span><br><span class="line">├── runtime</span><br><span class="line">│   ├── background.js                      // 背景类</span><br><span class="line">│   ├── gameinfo.js                        // 用于展示分数和结算界面</span><br><span class="line">│   └── music.js                           // 全局音效管理器</span><br><span class="line">├── databus.js                             // 管控游戏状态</span><br><span class="line">└── main.js</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      markdown文件中对文件夹进行说明的tree结构
    
    </summary>
    
    
      <category term="Other" scheme="http://pimichen.com/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>css媒体查询</title>
    <link href="http://pimichen.com/css/css%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2.html"/>
    <id>http://pimichen.com/css/css媒体查询.html</id>
    <published>2018-06-06T08:40:34.132Z</published>
    <updated>2018-06-06T08:45:38.123Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* iPhone4 */</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> only screen and (device-width: <span class="number">320px</span>) and (device-height: <span class="number">480px</span>) and (-webkit-device-pixel-ratio: <span class="number">2</span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* iPhone5 */</span></span><br><span class="line">@<span class="keyword">media</span> only screen and (device-width: <span class="number">320px</span>) and (device-height: <span class="number">568px</span>) and (-webkit-device-pixel-ratio: <span class="number">2</span>) &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* iPhone6、iPhone7、iPhone8 */</span></span><br><span class="line">@<span class="keyword">media</span> only screen and (device-height:<span class="number">375px</span>) and (device-height: <span class="number">667px</span>) and (-webkit-device-pixel-ratio: <span class="number">2</span>) &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* iPhone6Plus、iPhone7Plus、iPhone8Plus */</span></span><br><span class="line">@<span class="keyword">media</span> only screen and (device-width: <span class="number">414px</span>) and (device-height: <span class="number">736px</span>) and (-webkit-device-pixel-ratio: <span class="number">3</span>) &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* iPhoneX */</span></span><br><span class="line">@<span class="keyword">media</span> only screen and (device-width: <span class="number">375px</span>) and (device-height: <span class="number">812px</span>) and (-webkit-device-pixel-ratio: <span class="number">3</span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      css媒体查询
    
    </summary>
    
    
      <category term="CSS" scheme="http://pimichen.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>jquery上传文件</title>
    <link href="http://pimichen.com/jquery/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6.html"/>
    <id>http://pimichen.com/jquery/上传文件.html</id>
    <published>2018-04-26T02:21:15.227Z</published>
    <updated>2018-04-26T07:04:24.306Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">onfocus</span>=<span class="string">"this.blur()"</span> <span class="attr">id</span>=<span class="string">"choiceInput"</span> <span class="attr">placeholder</span>=<span class="string">"请选择需要上传的文件"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 上传excel --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">".xls, .xlsx"</span> <span class="attr">id</span>=<span class="string">"hiddenInput"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 上传图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/gif,image/jpeg,image/jpg,image/png,image/svg"</span> <span class="attr">id</span>=<span class="string">"hiddenInput"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"uploadBtn"</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#choiceInput'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">'#hiddenInput'</span>).click(); <span class="comment">// 触发隐藏的file input</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#hiddenInput'</span>).on(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">'#choiceInput'</span>).val($(<span class="keyword">this</span>)[<span class="number">0</span>].files[<span class="number">0</span>].name); <span class="comment">// 显示上传文件的名称</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果没有上传按钮，则在此处开始上传</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> uploadFlag = <span class="literal">false</span>; <span class="comment">// 上传flag，防止多次点击</span></span><br><span class="line">$(<span class="string">'#uploadBtn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (uploadFlag) <span class="keyword">return</span>;</span><br><span class="line">  uploadFlag = <span class="literal">true</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> fileName = $(<span class="string">'#choiceInput'</span>).val();</span><br><span class="line">  <span class="keyword">var</span> file = $(<span class="string">'#hiddenInput'</span>)[<span class="number">0</span>].files[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> (fileName == <span class="string">""</span>)&#123;</span><br><span class="line">    alert(<span class="string">"您还没有选择excel文档"</span>);</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 判断上传的文件类型（判断excel）</span></span><br><span class="line">  <span class="keyword">if</span> (fileName.substring(fileName.length - <span class="number">4</span>) != <span class="string">".xls"</span> &amp;&amp; fileName.substring(fileName.length - <span class="number">5</span>) != <span class="string">".xlsx"</span>) &#123;</span><br><span class="line">    alert(<span class="string">"仅支持上传excel文档"</span>);</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 判断上传的文件类型（判断图片）</span></span><br><span class="line">  <span class="keyword">if</span>(!<span class="regexp">/image\/\w+/</span>.test(file.type))&#123;</span><br><span class="line">    alert(<span class="string">"仅支持上传图片"</span>);</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData(); <span class="comment">// 注意formData存在兼容性，IE10开始支持</span></span><br><span class="line">  formData.append(<span class="string">"adId"</span>, <span class="string">'10001'</span>);</span><br><span class="line">  formData.append(<span class="string">"type"</span>, <span class="string">'1'</span>);</span><br><span class="line">  formData.append(<span class="string">"file"</span>, file);</span><br><span class="line"></span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    url: <span class="string">"saveidbyfile.vpage"</span>,</span><br><span class="line">    type: <span class="string">"POST"</span>,</span><br><span class="line">    data: formData,</span><br><span class="line">    processData: <span class="literal">false</span>,</span><br><span class="line">    contentType: <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">    timeout: <span class="number">10</span> * <span class="number">1000</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      uploadFlag = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">if</span> (data.success) &#123;</span><br><span class="line">        alert(<span class="string">'上传成功'</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">'上传失败：'</span> + data.info);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      uploadFlag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      jquery上传文件，如图片、excel等
    
    </summary>
    
    
      <category term="jQuery" scheme="http://pimichen.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>freemarker继承</title>
    <link href="http://pimichen.com/freemarker/freemarker%E7%BB%A7%E6%89%BF.html"/>
    <id>http://pimichen.com/freemarker/freemarker继承.html</id>
    <published>2018-04-17T08:25:38.097Z</published>
    <updated>2018-04-17T09:05:53.007Z</updated>
    
    <content type="html"><![CDATA[<p>freemarker有很好的继承机制，大体用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">|</span><br><span class="line">|__layout.ftl</span><br><span class="line">  |</span><br><span class="line">  |__changeClazz.ftl</span><br><span class="line">  |</span><br><span class="line">  |__module.ftl</span><br><span class="line">    |</span><br><span class="line">    |__center.ftl</span><br></pre></td></tr></table></figure><h2 id="父级文件-layout-ftl"><a href="#父级文件-layout-ftl" class="headerlink" title="父级文件 layout.ftl"></a>父级文件 layout.ftl</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#marko</span> <span class="attr">page</span> <span class="attr">pageName</span>=<span class="string">"index"</span> <span class="attr">clazzName</span>=<span class="string">"t-center-bg1"</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 此处暴露pageName和clazzName，可在子级中设置 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"$&#123;clazzName!''&#125;"</span> <span class="attr">data-page</span>=<span class="string">"$&#123;pageName!''&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">#nested</span> /&gt;</span>  # 此处暴露接口</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">#macro</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="子级文件"><a href="#子级文件" class="headerlink" title="子级文件"></a>子级文件</h2><ul><li><p>无孙子文件<code>changeClazz.ftl</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#import</span> "<span class="attr">.</span>/<span class="attr">layout.ftl</span>" <span class="attr">as</span> <span class="attr">temp</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- import 父文件layout.ftl --&gt;</span></span><br><span class="line"></span><br><span class="line">@temp.page pageName='changeClazz' clazzName='t-center-bg2'&gt;</span><br><span class="line"><span class="comment">&lt;!-- 设置layout的pageName 和 clazzName --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">@temp.page</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>有孙子文件<code>module.ftl</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#import</span> "<span class="attr">.</span>/<span class="attr">layout.ftl</span>" <span class="attr">as</span> <span class="attr">temp</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- import 父文件 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">#marko</span> <span class="attr">center</span> <span class="attr">currentPage</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此处暴露currentPage，可在子级中设置 --&gt;</span></span><br><span class="line"></span><br><span class="line">  @temp.page pageName='center' clazzName='t-center-bg3'&gt;</span><br><span class="line">  <span class="comment">&lt;!-- 设置layout的pageName 和 clazzName --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span> <span class="attr">data-currentpage</span>=<span class="string">"$&#123;currentPage!''&#125;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">#nested</span> /&gt;</span>  # 此处暴露接口</span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bototm"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">@temp.page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">#macro</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="孙子文件center-ftl"><a href="#孙子文件center-ftl" class="headerlink" title="孙子文件center.ftl"></a>孙子文件center.ftl</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">#import</span> "<span class="attr">module.ftl</span>" <span class="attr">as</span> <span class="attr">module</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- import 父文件module.ftl --&gt;</span></span><br><span class="line"></span><br><span class="line">@module.center currentPage='1'&gt;</span><br><span class="line"><span class="comment">&lt;!-- 设置module的currentPage --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">@module.page</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      freemarker继承语法
    
    </summary>
    
    
      <category term="FreeMarker" scheme="http://pimichen.com/tags/freemarker/"/>
    
  </entry>
  
  <entry>
    <title>node安装的小型服务器</title>
    <link href="http://pimichen.com/node/node%E5%B0%8F%E5%9E%8B%E6%9C%8D%E5%8A%A1%E5%99%A8.html"/>
    <id>http://pimichen.com/node/node小型服务器.html</id>
    <published>2018-04-16T03:01:15.838Z</published>
    <updated>2018-06-03T07:49:03.365Z</updated>
    
    <content type="html"><![CDATA[<p>node可以安装一些小型的服务器，如<a href="#browser-sync">browser-sync</a>、<a href="#live-server">live-server</a>、<a href="#npx">npx</a>、<a href="#python">Python服务器</a>、<a href="#anyproxy">anyproxy</a>、<a href="#spy-debugger">spy-debugger</a></p><h2 id="browser-sync"><a href="#browser-sync" class="headerlink" title="browser-sync"></a><span id="browser-sync">browser-sync</span></h2><blockquote><p>详见<a href="http://www.browsersync.cn/" target="_blank" rel="noopener">BrowserSync</a></p></blockquote><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g  browser-sync  <span class="comment"># 全局安装</span></span><br><span class="line"></span><br><span class="line">npm install --save-dev browser-sync  <span class="comment"># 局部安装</span></span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">browser-sync start --server --files <span class="string">"css/*.css"</span>  <span class="comment"># 执行具体目录</span></span><br><span class="line"></span><br><span class="line">browser-sync start --server --files <span class="string">"css/*.css, *.html"</span>  <span class="comment"># 监听多个类型的文件，逗号分开</span></span><br><span class="line"></span><br><span class="line">browser-sync start --server --files <span class="string">"**"</span>  <span class="comment"># 自动运行</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="live-server"><a href="#live-server" class="headerlink" title="live-server"></a><span id="live-server">live-server</span></h2><blockquote><p>详见<a href="https://www.npmjs.com/package/live-server" target="_blank" rel="noopener">live-server</a></p></blockquote><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g live-server  <span class="comment"># 全局安装</span></span><br><span class="line"></span><br><span class="line">npm install --save-dev live-server  <span class="comment"># 局部安装</span></span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">live-server</span><br><span class="line"></span><br><span class="line">live-server --port=8080  <span class="comment"># 指定端口</span></span><br><span class="line"></span><br><span class="line">live-server --browser=chrome  <span class="comment"># 指定浏览器访问</span></span><br></pre></td></tr></table></figure></li><li><p>其他用法<br>在<code>package.json</code>的<code>scripts</code>下配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;  </span><br><span class="line">  <span class="string">"server"</span>: <span class="string">"live-server ./ --port=8081"</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run server</span><br></pre></td></tr></table></figure></li></ul><h2 id="npx"><a href="#npx" class="headerlink" title="npx"></a><span id="npx">npx</span></h2><p>  如果你把NPM升级到最新版本<a href="mailto:npm@5.2.0" target="_blank" rel="noopener">npm@5.2.0</a>，可能会发现，它会安装一个新的包npx。<br>  开启静态服务器<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx http-server</span><br></pre></td></tr></table></figure></p><h2 id="Python服务器"><a href="#Python服务器" class="headerlink" title="Python服务器"></a><span id="python">Python服务器</span></h2><p>  安装了 Python 的机器上，可以使用 nohup python -m SimpleHTTPServer [port] &amp; 快速搭建一个http服务。</p><ul><li>使用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8000  <span class="comment"># 只能前台运行</span></span><br><span class="line"></span><br><span class="line">python -m SimpleHTTPServer 8000 &amp;  <span class="comment"># 可后台运行，不影响终端的使用</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="anyproxy"><a href="#anyproxy" class="headerlink" title="anyproxy"></a><span id="anyproxy">anyproxy</span></h2><blockquote><p>详见<a href="http://anyproxy.io/cn/" target="_blank" rel="noopener">anyproxy</a></p></blockquote><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g anyproxy  <span class="comment"># 全局安装</span></span><br><span class="line"></span><br><span class="line">npm install --save-dev anyproxy  <span class="comment"># 局部安装</span></span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、anyproxy</span><br><span class="line"></span><br><span class="line">2、电脑打开相应地址</span><br><span class="line"></span><br><span class="line">3、手机设置代理，默认端口9888</span><br><span class="line"></span><br><span class="line">4、手机浏览器方位调试</span><br></pre></td></tr></table></figure></li><li><p>更改端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anyproxy --port 1080  <span class="comment"># 更改端口</span></span><br></pre></td></tr></table></figure></li><li><p>代理HTTPS</p><ul><li><p>AnyProxy默认不对https请求做处理，如需看到明文信息，需要配置CA证书</p><blockquote><p>解析https请求的原理是中间人攻击（man-in-the-middle），用户必须信任AnyProxy生成的CA证书，才能进行后续流程</p></blockquote></li><li><p>生成证书并解析所有https请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">anyproxy-ca <span class="comment">#生成rootCA证书，生成后需要手动信任</span></span><br><span class="line">anyproxy --intercept <span class="comment">#启动AnyProxy，并解析所有https请求</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><pre><code>- [附录：如何信任CA证书](http://anyproxy.io/cn/#%E8%AF%81%E4%B9%A6%E9%85%8D%E7%BD%AE)</code></pre><h2 id="spy-debugger"><a href="#spy-debugger" class="headerlink" title="spy-debugger"></a><span id="spy-debugger">spy-debugger</span></h2><blockquote><p>详见<a href="https://github.com/wuchangming/spy-debugger" target="_blank" rel="noopener">spy-debugger</a></p></blockquote><p>  集成了anyproxy，可进行微信调试，各种WebView样式调试、手机浏览器的页面真机调试。便捷的远程调试手机页面、抓包工具，支持：HTTP/HTTPS，无需USB连接设备。</p><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g spy-debugger  <span class="comment"># 全局安装</span></span><br><span class="line"></span><br><span class="line">npm install --save-dev spy-debugger  <span class="comment"># 局部安装</span></span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、spy-debugger</span><br><span class="line"></span><br><span class="line">2、电脑打开相应地址</span><br><span class="line"></span><br><span class="line">3、手机设置代理，默认端口9888</span><br><span class="line"></span><br><span class="line">4、手机安装证书，手机浏览器访问http://s.xxx</span><br><span class="line"></span><br><span class="line">5、手机浏览器方位调试</span><br></pre></td></tr></table></figure></li></ul><ul><li>配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">spy-debugger -p 8888  <span class="comment"># 更改端口</span></span><br><span class="line"></span><br><span class="line">spy-debugger -e http://127.0.0.1:8888  <span class="comment"># 设置外部代理</span></span><br><span class="line"></span><br><span class="line">spy-debugger -c <span class="literal">true</span>  <span class="comment"># 是否允许HTTP缓存，默认false</span></span><br><span class="line"></span><br><span class="line">spy-debugger -b <span class="literal">false</span>  <span class="comment"># 是否只拦截浏览器发起的https请求，默认true</span></span><br><span class="line"></span><br><span class="line">spy-debugger -w <span class="literal">true</span>  <span class="comment"># 设置页面内容为可编辑模式，默认false</span></span><br><span class="line"></span><br><span class="line">spy-debugger -i <span class="literal">true</span>  <span class="comment"># 是否允许weinre监控iframe加载的页面</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      node安装的小型服务器
    
    </summary>
    
    
      <category term="Node" scheme="http://pimichen.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>ES7 求幂运算</title>
    <link href="http://pimichen.com/es7/es7-%E6%B1%82%E5%B9%82%E8%BF%90%E7%AE%97.html"/>
    <id>http://pimichen.com/es7/es7-求幂运算.html</id>
    <published>2018-04-04T07:32:57.578Z</published>
    <updated>2018-04-04T09:15:30.884Z</updated>
    
    <content type="html"><![CDATA[<p>ES7只新增了2个新特性</p><ul><li><code>Array.prototype.includes</code></li><li>Exponentiation Operator(求幂运算)</li></ul><p>本文只讲解ES7求幂运算，includes方法请移步<a href="/es7/es7-includes方法.html">ES7 includes</a></p><p>在ES6中，可以使用<code>Math.pow</code>来实现求幂运算<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">3</span>); <span class="comment">// 8</span></span><br><span class="line"><span class="built_in">Math</span>.pow(<span class="number">3</span>, <span class="number">2</span>); <span class="comment">// 9</span></span><br></pre></td></tr></table></figure></p><p>ES7中，可以使用<code>**</code>来实习求幂运算<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> ** <span class="number">3</span> <span class="comment">// 8</span></span><br><span class="line"><span class="number">3</span> ** <span class="number">2</span> <span class="comment">// 9</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      es7求幂运算解析
    
    </summary>
    
    
      <category term="ES7" scheme="http://pimichen.com/tags/es7/"/>
    
  </entry>
  
  <entry>
    <title>ES7 includes方法</title>
    <link href="http://pimichen.com/es7/es7-includes%E6%96%B9%E6%B3%95.html"/>
    <id>http://pimichen.com/es7/es7-includes方法.html</id>
    <published>2018-04-04T07:32:37.230Z</published>
    <updated>2018-04-04T08:58:56.054Z</updated>
    
    <content type="html"><![CDATA[<p>ES7只新增了2个新特性</p><ul><li><code>Array.prototype.includes</code></li><li>Exponentiation Operator(求幂运算)</li></ul><p>本文只讲解includes方法，Exponentiation Operator(求幂运算)请移步<a href="/es7/es7-求幂运算.html">ES7求幂运算</a></p><p><code>Array.prototype.includes</code>用法都容易和简单。它是一个替代<code>indexOf</code>（ES6新增），开发人员用来检查数组中是否存在值，<code>indexOf</code>是一种尴尬的使用，因为它返回一个元素在数组中的位置或者-1当这样的元素不能被找到的情况下。所以它返回一个数字，而不是一个布尔值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">'react'</span>, <span class="string">'angular'</span>, <span class="string">'vue'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// WRONG</span></span><br><span class="line"><span class="keyword">if</span> (arr.indexOf(<span class="string">'react'</span>)) &#123; <span class="comment">// 0 -&gt; evaluates to false, definitely as we expected</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Can use React'</span>) <span class="comment">// this line would never be executed</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Correct</span></span><br><span class="line"><span class="keyword">if</span> (arr.indexOf(<span class="string">'react'</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Can use React'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者使用一点点<code>hack</code> 位运算符 <code>~</code> 使代码更加紧凑一些，因为<code>~</code>（位异或）对任何数字相当于<code>-(a + 1)</code>:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">'react'</span>, <span class="string">'angular'</span>, <span class="string">'vue'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Correct</span></span><br><span class="line"><span class="keyword">if</span> (~arr.indexOf(<span class="string">'react'</span>)) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Can use React'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而在<code>ES7</code>中，可以使用<code>includes</code>开替代<code>indexOf</code>作为检测：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">'react'</span>, <span class="string">'angular'</span>, <span class="string">'vue'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Correct</span></span><br><span class="line"><span class="keyword">if</span> (arr.includes(<span class="string">'react'</span>)) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Can use React'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开发者还能在字符串中使用<code>includes</code>:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'React Quickly'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Correct</span></span><br><span class="line"><span class="keyword">if</span> (str.toLowerCase().includes(<span class="string">'react'</span>)) &#123;  <span class="comment">// true</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Found "react"'</span>)  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>includes第二可选参数fromIndex，这对于优化是有好处的，因为它允许从特定位置开始寻找匹配。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">2</span>)) <span class="comment">// === true</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">4</span>)) <span class="comment">// === false</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NaN</span>].includes(<span class="literal">NaN</span>)) <span class="comment">// === true</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, <span class="number">-0</span>].includes(+<span class="number">0</span>)) <span class="comment">// === true</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>, +<span class="number">0</span>].includes(<span class="number">-0</span>)) <span class="comment">// === true</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>].includes(<span class="string">'a'</span>)) <span class="comment">// === true</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>].includes(<span class="string">'a'</span>, <span class="number">1</span>)) <span class="comment">// === false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'React Quickly'</span>.includes(<span class="string">'React'</span>)) <span class="comment">// === true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      es7includes方法解析
    
    </summary>
    
    
      <category term="ES7" scheme="http://pimichen.com/tags/es7/"/>
    
  </entry>
  
  <entry>
    <title>js检测浏览器是否出于放缩状态</title>
    <link href="http://pimichen.com/javascript/js%E6%A3%80%E6%B5%8B%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E5%90%A6%E5%87%BA%E4%BA%8E%E6%94%BE%E7%BC%A9%E7%8A%B6%E6%80%81.html"/>
    <id>http://pimichen.com/javascript/js检测浏览器是否出于放缩状态.html</id>
    <published>2018-03-16T03:25:33.263Z</published>
    <updated>2018-03-16T03:28:45.482Z</updated>
    
    <content type="html"><![CDATA[<p>先来说说浏览器提供的标准检测接口，window.devicePixelRatio 是设备上物理像素和设备独立像素的比例，该属性就可以用于检测网页是否被缩放了。在普通的 PC 浏览器上，在默认无缩放的情况下其默认值是 1。目前Firefox、chrome等都得到了很好的支持。</p><p>好吧，接下来该说说 IE 的处理方法了。IE 提供了 window.screen.deviceXDPI 和 window.screen.logicalXDPI 两个属性，deviceXDPI 就是对应的设备上的物理像素，而 logicalXDPI 就是对应了设备独立像素的比例。估计标准的检测接口也只是基于 IE 这种方法的一种改进。这两个属性在 windows XP+ 以上的系统上的默认值都是 96，因为系统默认的就是 96dpi 。</p><p>对于以上两种都不支持的浏览器，还可以利用window.outerWidth 和 window.innerWidth 这两个属性。outerWidth 返回的是窗口元素的外部实际宽度，innerWidth 返回的是窗口元素的内部实际宽度，这两个宽度都包含了滚动条在内的宽度。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">detectZoom</span> (<span class="params"></span>)</span>&#123; </span><br><span class="line">  <span class="keyword">var</span> ratio = <span class="number">0</span>,</span><br><span class="line">    screen = <span class="built_in">window</span>.screen,</span><br><span class="line">    ua = navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.devicePixelRatio !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    ratio = <span class="built_in">window</span>.devicePixelRatio;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (~ua.indexOf(<span class="string">'msie'</span>)) &#123;  </span><br><span class="line">    <span class="keyword">if</span> (screen.deviceXDPI &amp;&amp; screen.logicalXDPI) &#123;</span><br><span class="line">      ratio = screen.deviceXDPI / screen.logicalXDPI;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.outerWidth !== <span class="literal">undefined</span> &amp;&amp; <span class="built_in">window</span>.innerWidth !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    ratio = <span class="built_in">window</span>.outerWidth / <span class="built_in">window</span>.innerWidth;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ratio)&#123;</span><br><span class="line">    ratio = <span class="built_in">Math</span>.round(ratio * <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">   <span class="keyword">return</span> ratio;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>detectZoom 函数的返回值如果是 100 就是默认缩放级别，大于 100 则是放大了，小于 100 则是缩小了。</p>]]></content>
    
    <summary type="html">
    
      js检测浏览器是否出于放缩状态
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>前端算法集合</title>
    <link href="http://pimichen.com/javascript/%E5%89%8D%E7%AB%AF%E7%AE%97%E6%B3%95%E9%9B%86%E5%90%88.html"/>
    <id>http://pimichen.com/javascript/前端算法集合.html</id>
    <published>2017-12-26T11:09:55.043Z</published>
    <updated>2018-12-25T11:14:17.947Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用前介绍"><a href="#使用前介绍" class="headerlink" title="使用前介绍"></a>使用前介绍</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// How to export and import </span></span><br><span class="line"><span class="built_in">module</span>.exports = swap; --&gt; 对应 <span class="keyword">var</span> s = <span class="built_in">require</span>(<span class="string">'../*.js'</span>);</span><br><span class="line"><span class="comment">// 或：</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> swap --&gt; 对应 <span class="keyword">import</span> s <span class="keyword">from</span> <span class="string">'../*.js'</span></span><br><span class="line"><span class="comment">// 或:</span></span><br><span class="line"><span class="keyword">export</span> &#123;swap&#125; --&gt; 对应 <span class="keyword">import</span> &#123;swap&#125; <span class="keyword">from</span> <span class="string">'../*.js'</span></span><br></pre></td></tr></table></figure><h1 id="不借助临时变量，交换整数"><a href="#不借助临时变量，交换整数" class="headerlink" title="不借助临时变量，交换整数"></a>不借助临时变量，交换整数</h1><h2 id="加减乘除法"><a href="#加减乘除法" class="headerlink" title="加减乘除法"></a>加减乘除法</h2><p>注意：如果是浮点数，对于加减乘除法需要注意<a href="/javascript/浮点数运算导致精度丢失.html">浮点数的精度丢失</a>问题。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 思想：先求两个数的“和”，再用“和”去减</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [1, 3]</span></span><br><span class="line">  a = a + b; <span class="comment">// a = 1 + 3 = 4</span></span><br><span class="line">  b = a - b; <span class="comment">// b = 4 - 3 = 1</span></span><br><span class="line">  a = a - b; <span class="comment">// a = 4 - 1 = 3</span></span><br><span class="line">  <span class="keyword">return</span> [a, b]; <span class="comment">// [3, 1]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 思想：先求两个数的“差”，再用“差”去加</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [3, 1]</span></span><br><span class="line">  a = a - b; <span class="comment">// a = 3 - 1 = 2</span></span><br><span class="line">  b = a + b; <span class="comment">// b = 2 + 1 = 3</span></span><br><span class="line">  a = b - a; <span class="comment">// a = 3 - 2 = 1</span></span><br><span class="line">  <span class="keyword">return</span> [a, b]; <span class="comment">// [1, 3]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 思想：先求两个数的“乘积”，再用“乘积”去除</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [3, 8]</span></span><br><span class="line">  a = a * b; <span class="comment">// a = 3 * 8 = 24</span></span><br><span class="line">  b = a / b; <span class="comment">// b = 24 / 8 = 3</span></span><br><span class="line">  a = a / b; <span class="comment">// a = 24 / 3 = 8</span></span><br><span class="line">  <span class="keyword">return</span> [a, b]; <span class="comment">// [8, 3]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 思想：先求两个数的“商”，再用“商”去乘</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [8, 3]</span></span><br><span class="line">  a = a / b; <span class="comment">// a = 8 / 3 = 8 / 3</span></span><br><span class="line">  b = a * b; <span class="comment">// b = (8 / 3) * 3 = 8</span></span><br><span class="line">  a = b / a; <span class="comment">// a = 8 / (8 / 3) = 3</span></span><br><span class="line">  <span class="keyword">return</span> [a, b]; <span class="comment">// [3, 8]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="对象法"><a href="#对象法" class="headerlink" title="对象法"></a>对象法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [1, 3]</span></span><br><span class="line">  a = &#123;</span><br><span class="line">    a: b,</span><br><span class="line">    b: a</span><br><span class="line">  &#125;</span><br><span class="line">  b = a.b; <span class="comment">// 1</span></span><br><span class="line">  a = a.a; <span class="comment">// 3</span></span><br><span class="line">  <span class="keyword">return</span> [a, b]; <span class="comment">// [3, 1]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组法"><a href="#数组法" class="headerlink" title="数组法"></a>数组法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [1, 3]</span></span><br><span class="line">  a = [a, b];</span><br><span class="line">  b = a[<span class="number">0</span>]; <span class="comment">// 1</span></span><br><span class="line">  a = a[<span class="number">1</span>]; <span class="comment">// 3</span></span><br><span class="line">  <span class="keyword">return</span> [a, b]; <span class="comment">// [3, 1]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [1, 3]</span></span><br><span class="line">  a = [b, b = a][<span class="number">0</span>]; <span class="comment">// a = 3, b = 1;</span></span><br><span class="line">  <span class="keyword">return</span> [a, b]; <span class="comment">// [3 ,1]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ES6数组解构法，推荐"><a href="#ES6数组解构法，推荐" class="headerlink" title="ES6数组解构法，推荐"></a>ES6数组解构法，推荐</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">a, b</span>) </span>&#123; <span class="comment">// 如 [1, 3]</span></span><br><span class="line">  [a, b] = [b, a];</span><br><span class="line">  <span class="keyword">return</span> [a, b];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h1><h2 id="方法1（filter，推荐使用）"><a href="#方法1（filter，推荐使用）" class="headerlink" title="方法1（filter，推荐使用）"></a>方法1（filter，推荐使用）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filter函数会过滤出满足条件的元素</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniqueArr</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newArr = arr.filter(<span class="function">(<span class="params">item, index, self</span>) =&gt;</span> &#123; <span class="comment">// 三个参数依次是：当前项、索引值、arr对象</span></span><br><span class="line">    <span class="keyword">return</span> self.indexOf(item) === index; <span class="comment">// 对于重复的元素，只有第一个元素符合条件，后面的都会被过滤掉</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法2（新数组法）"><a href="#方法2（新数组法）" class="headerlink" title="方法2（新数组法）"></a>方法2（新数组法）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniqueArr</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newArr = []; <span class="comment">// 一个新的临时数组</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123; <span class="comment">// 遍历当前数组</span></span><br><span class="line">    <span class="comment">// 如果当前数组的第i项已经保存进了临时数组，那么跳过，</span></span><br><span class="line">    <span class="comment">// 否则把当前项push到临时数组里面</span></span><br><span class="line">    <span class="keyword">if</span> (newArr.indexOf(arr[i]) === <span class="number">-1</span>)&#123; <span class="comment">// 在新数组中查找原数组的每一项是否存在</span></span><br><span class="line">      newArr.push(arr[i]); <span class="comment">// 如果不存在就加到新数组中</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法3（hash表法）"><a href="#方法3（hash表法）" class="headerlink" title="方法3（hash表法）"></a>方法3（hash表法）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniqueArr</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> obj = &#123;&#125;, newArr = []; <span class="comment">// obj为hash表，newArr为临时数组</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123; <span class="comment">// 遍历当前数组 , 可改成 for (var i in arr) &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (!obj[arr[i]])&#123; <span class="comment">// 如果hash表中没有当前项</span></span><br><span class="line">      obj[arr[i]] = <span class="literal">true</span>; <span class="comment">// 存入hash表</span></span><br><span class="line">      newArr.push(arr[i]); <span class="comment">// 把当前数组的当前项push到临时数组里面</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法4"><a href="#方法4" class="headerlink" title="方法4"></a>方法4</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniqueArr</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newArr = [arr[<span class="number">0</span>]]; <span class="comment">// 结果数组</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123; <span class="comment">// 从第二项开始遍历</span></span><br><span class="line">    <span class="comment">// 如果当前数组的第i项在当前数组中第一次出现的位置不是i，</span></span><br><span class="line">    <span class="comment">// 那么表示第i项是重复的，忽略掉。否则存入结果数组</span></span><br><span class="line">    <span class="keyword">if</span> (arr.indexOf(arr[i]) === i) &#123;</span><br><span class="line">      newArr.push(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法5（同时排序）"><a href="#方法5（同时排序）" class="headerlink" title="方法5（同时排序）"></a>方法5（同时排序）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniqueArr</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  arr.sort(); <span class="comment">// 数组排序</span></span><br><span class="line">  <span class="keyword">var</span> newArr = [arr[<span class="number">0</span>]]; <span class="comment">// 先提取最小的</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] !== newArr[newArr.length<span class="number">-1</span>]) &#123; <span class="comment">// 将不等于的放在新数组的后面，等于的跳过</span></span><br><span class="line">      newArr.push(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="取数组中的最大最小值"><a href="#取数组中的最大最小值" class="headerlink" title="取数组中的最大最小值"></a>取数组中的最大最小值</h1><h2 id="排序法"><a href="#排序法" class="headerlink" title="排序法"></a>排序法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;); <span class="comment">// [0, 1, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> min = arr[<span class="number">0</span>];  <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">var</span> max = arr[arr.length - <span class="number">1</span>];  <span class="comment">// 5</span></span><br></pre></td></tr></table></figure><h2 id="apply方法"><a href="#apply方法" class="headerlink" title="apply方法"></a>apply方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]);</span><br><span class="line"><span class="built_in">Math</span>.min.apply(<span class="literal">null</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// apply()方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>.<span class="title">apply</span>(<span class="params">thisObj[, argArray]</span>); // 2个参数，参数2为数组</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">// <span class="title">call</span>(<span class="params"></span>)方法</span></span><br><span class="line"><span class="function"><span class="title">function</span>.<span class="title">call</span>(<span class="params">thisObj[, arg1[, arg2[, [, ...argN]]]]</span>); // 多个参数，其他参数为非数组</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">// 同理，利用<span class="title">apply</span>方法还可以用于拼接数组：</span></span><br><span class="line"><span class="function"><span class="title">var</span> <span class="title">arr1</span> = <span class="title">new</span> <span class="title">Array</span>(<span class="params"><span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span></span>);</span></span><br><span class="line"><span class="function"><span class="title">var</span> <span class="title">arr2</span> = <span class="title">new</span> <span class="title">Array</span>(<span class="params"><span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span></span>);</span></span><br><span class="line"><span class="function"><span class="title">Array</span>.<span class="title">prototype</span>.<span class="title">push</span>.<span class="title">apply</span>(<span class="params">arr1, arr2</span>); // 返回数组长度 6</span></span><br><span class="line">arr1.push.apply(arr1, arr2); // arr1:["1", "2", "3", "4", "5", "6"]</span><br><span class="line"><span class="comment">// 上面的等同于</span></span><br><span class="line">arr1.push(...arr2); <span class="comment">// ES6语法</span></span><br><span class="line">arr1.concat(arr2); <span class="comment">// ES5语法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 更多apply和call用法见：https://www.cnblogs.com/lengyuehuahun/p/5643625.html</span></span><br></pre></td></tr></table></figure><h1 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h1><p><a href="https://segmentfault.com/a/1190000010413296" target="_blank" rel="noopener">segmentfault【wscats】 十大经典排序算法</a></p><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p><img src="../images/javascript/js_bubble_sort.gif" title="冒泡排序原理图"></p><ol><li>比较相邻的元素，如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</li><li>针对所有的元素重复以上的步骤，除了最后一个。</li><li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li><li>实际排序时，由后往前完成排序动作。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = arr.length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>]) &#123; <span class="comment">// 相邻元素两两对比</span></span><br><span class="line">        <span class="comment">// 使用中间变量实现元素交互</span></span><br><span class="line">        <span class="comment">// var temp = arr[j+1];</span></span><br><span class="line">        <span class="comment">// arr[j+1] = arr[j];</span></span><br><span class="line">        <span class="comment">// arr[j] = temp;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// es6数组解构实现元素交互</span></span><br><span class="line">        [arr[j], arr[j+<span class="number">1</span>]] = [arr[j+<span class="number">1</span>], arr[j]];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设arr是一个数组为5的数组</span></span><br><span class="line"><span class="comment">// i  j</span></span><br><span class="line"><span class="comment">// ----</span></span><br><span class="line"><span class="comment">// 0  0</span></span><br><span class="line"><span class="comment">// 0  1</span></span><br><span class="line"><span class="comment">// 0  2</span></span><br><span class="line"><span class="comment">// 0  3</span></span><br><span class="line"><span class="comment">// ----</span></span><br><span class="line"><span class="comment">// 1  0</span></span><br><span class="line"><span class="comment">// 1  1</span></span><br><span class="line"><span class="comment">// 1  2</span></span><br><span class="line"><span class="comment">// ----</span></span><br><span class="line"><span class="comment">// 2  0</span></span><br><span class="line"><span class="comment">// 2  1</span></span><br><span class="line"><span class="comment">// ----</span></span><br><span class="line"><span class="comment">// 3  0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由上面可以看出，取arr[j]和arr[j+1]即是两个相邻元素的比较</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以数组[1, 8, 5, 4, 7, 3, 9, 2, 6]为例，实际冒泡排序如下：</span></span><br><span class="line"><span class="comment">// ① ⑧ 5 4 7 3 9 2 6   // 1与8比较 =&gt; 1 8 5 4 7 3 9 2 6</span></span><br><span class="line"><span class="comment">// 1 ⑧ ⑤ 4 7 3 9 2 6   // 8与5比较 =&gt; 1 5 8 4 7 3 9 2 6</span></span><br><span class="line"><span class="comment">// 1 5 ⑧ ④ 7 3 9 2 6   // 8与4比较 =&gt; 1 5 4 8 7 3 9 2 6</span></span><br><span class="line"><span class="comment">// 1 5 4 ⑧ ⑦ 3 9 2 6   // 8与7比较 =&gt; 1 5 4 7 8 3 9 2 6</span></span><br><span class="line"><span class="comment">// 1 5 4 7 ⑧ ③ 9 2 6   // 8与3比较 =&gt; 1 5 4 7 3 8 9 2 6</span></span><br><span class="line"><span class="comment">// 1 5 4 7 3 ⑧ ⑨ 2 6   // 8与9比较 =&gt; 1 5 4 7 3 8 9 2 6</span></span><br><span class="line"><span class="comment">// 1 5 4 7 3 8 ⑨ ② 6   // 9与2比较 =&gt; 1 5 4 7 3 8 2 9 6</span></span><br><span class="line"><span class="comment">// 1 5 4 7 3 8 2 ⑨ ⑥   // 9与6比较 =&gt; 1 5 4 7 3 8 2 6 9</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// ① ⑤ 4 7 3 8 2 9 6   // 1与5比较 =&gt; 1 5 4 7 3 8 2 6 9</span></span><br><span class="line"><span class="comment">// 1 ⑤ ④ 7 3 8 2 6 9   // 5与4比较 =&gt; 1 4 5 7 3 8 2 6 9</span></span><br><span class="line"><span class="comment">// 1 4 ⑤ ⑦ 3 8 2 6 9   // 5与7比较 =&gt; 1 4 5 7 3 8 2 6 9</span></span><br><span class="line"><span class="comment">// 1 4 5 ⑦ ③ 8 2 6 9   // 7与3比较 =&gt; 1 4 5 3 7 8 2 6 9</span></span><br><span class="line"><span class="comment">// 1 4 5 3 ⑦ ⑧ 2 6 9   // 7与8比较 =&gt; 1 4 5 3 7 8 2 6 9</span></span><br><span class="line"><span class="comment">// 1 4 5 3 7 ⑧ ② 6 9   // 8与2比较 =&gt; 1 4 5 3 7 2 8 6 9</span></span><br><span class="line"><span class="comment">// 1 4 5 3 7 2 ⑧ ⑥ 9   // 8与6比较 =&gt; 1 4 5 3 7 2 6 8 9</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// ① ④ 5 3 7 2 6 8 9   // 1与4比较 =&gt; 1 4 5 3 7 2 6 8 9</span></span><br><span class="line"><span class="comment">// 1 ④ ⑤ 3 7 2 6 8 9   // 4与5比较 =&gt; 1 4 5 3 7 2 6 8 9</span></span><br><span class="line"><span class="comment">// 1 4 ⑤ ③ 7 2 6 8 9   // 5与3比较 =&gt; 1 4 3 5 7 2 6 8 9</span></span><br><span class="line"><span class="comment">// 1 4 3 ⑤ ⑦ 2 6 8 9   // 5与7比较 =&gt; 1 4 3 5 7 2 6 8 9</span></span><br><span class="line"><span class="comment">// 1 4 3 5 ⑦ ② 6 8 9   // 7与2比较 =&gt; 1 4 3 5 2 7 6 8 9</span></span><br><span class="line"><span class="comment">// 1 4 3 5 2 ⑦ ⑥ 8 9   // 7与6比较 =&gt; 1 4 3 5 2 6 7 8 9</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// ① ④ 3 5 2 6 7 8 9   // 1与4比较 =&gt; 1 4 3 5 2 6 7 8 9</span></span><br><span class="line"><span class="comment">// 1 ④ ③ 5 2 6 7 8 9   // 4与3比较 =&gt; 1 3 4 5 2 6 7 8 9</span></span><br><span class="line"><span class="comment">// 1 3 ④ ⑤ 2 6 7 8 9   // 4与5比较 =&gt; 1 3 4 5 2 6 7 8 9</span></span><br><span class="line"><span class="comment">// 1 3 4 ⑤ ② 6 7 8 9   // 5与2比较 =&gt; 1 3 4 2 5 6 7 8 9</span></span><br><span class="line"><span class="comment">// 1 3 4 2 ⑤ ⑥ 7 8 9   // 5与6比较 =&gt; 1 3 4 2 5 6 7 8 9</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// ... ...</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// ① ② 3 4 5 6 7 8 9   // 1与2比较 =&gt; 1 2 3 4 5 6 7 8 9</span></span><br></pre></td></tr></table></figure><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p><img src="../images/javascript/js_select_sort.gif" title="选择排序原理图"></p><ol><li>首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置。</li><li>再从剩余未排序元素中继续寻找最小（大）元素，然后放到<strong><em>已排序序列</em></strong>的末尾。</li><li>重复第二步，直到所有元素均排序完毕。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectionSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = arr.length;</span><br><span class="line">  <span class="keyword">var</span> minIndex, temp;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123; <span class="comment">// 此处循环到倒数第二项即可，届时最后一项已经完成排序（最大或最小）</span></span><br><span class="line">    minIndex = i; <span class="comment">// 假设次数最小数的索引为当前i</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123; <span class="comment">// 遍历i之后的数</span></span><br><span class="line">      <span class="keyword">if</span> (arr[j] &lt; arr[minIndex]) &#123; <span class="comment">// 存在比minIndex还小的数</span></span><br><span class="line">        minIndex = j;               <span class="comment">// 将最小数的索引赋给minIndex</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 此时minIndex可能等于i（即上面遍历之后不存在更小的），也可能不等于i（存在更小的，即arr[minIndex] &lt; arr[i]）;</span></span><br><span class="line">    <span class="comment">// 但是此时minIndex &gt;= i，所以我们交换arr[i]和arr[minIndex]的位置即可</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将 minIndex对应的数 放在当前索引对应的数的前面</span></span><br><span class="line">    <span class="comment">// temp = arr[i];</span></span><br><span class="line">    <span class="comment">// arr[i] = arr[minIndex];</span></span><br><span class="line">    <span class="comment">// arr[minIndex] = temp;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// es6数组结构实现元素交换</span></span><br><span class="line">    [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以数组[1, 8, 5, 4, 7, 3, 9, 2, 6]为例，实际选择排序如下：</span></span><br><span class="line"><span class="comment">// ① 8 5 4 7 3 9 2 6   // 1与1交换</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 1 ⑧ 5 4 7 3 9 ② 6  // 8与2交换</span></span><br><span class="line"><span class="comment">// 1 2 5 4 7 3 9 8 6</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 1 2 ⑤ 4 7 ③ 9 8 6  // 5与3交换</span></span><br><span class="line"><span class="comment">// 1 2 3 4 7 5 9 8 6</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 1 2 3 ④ 7 5 9 8 6   // 4与4交换</span></span><br><span class="line"><span class="comment">// 1 2 3 4 7 5 9 8 6</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 1 2 3 4 ⑦ ⑤ 9 8 6  // 7与5交换</span></span><br><span class="line"><span class="comment">// 1 2 3 4 5 7 9 8 6</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 1 2 3 4 5 ⑦ 9 8 ⑥  // 7与6交换</span></span><br><span class="line"><span class="comment">// 1 2 3 4 5 6 9 8 7</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 1 2 3 4 5 6 ⑨ 8 ⑦  // 9与7交换</span></span><br><span class="line"><span class="comment">// 1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 1 2 3 4 5 6 7 ⑧ 9   // 8与8交换</span></span><br><span class="line"><span class="comment">// 1 2 3 4 5 6 7 8 9</span></span><br></pre></td></tr></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p><img src="../images/javascript/js_quick_sort.gif" title="快速排序原理图"></p><ol><li>从数列中挑出一个元素，称为 “基准”（pivot）;</li><li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li><li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> leftArr = [];</span><br><span class="line">  <span class="keyword">let</span> rightArr = [];</span><br><span class="line">  <span class="keyword">let</span> pivot = arr[<span class="number">0</span>]; <span class="comment">// 选择第一项作为基准值</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123; <span class="comment">// 从1开始遍历，因为0已经作为基准值使用了</span></span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt; pivot) &#123;</span><br><span class="line">      rightArr.push(arr[i]);     </span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      leftArr.push(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> [].concat(quickSort(leftArr), [q], quickSort(rightArr)); <span class="comment">// 拼接左分区、基准值、右分区（进行递归）</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以数组[1, 8, 5, 4, 7, 3, 9, 2, 6]为例，实际快速排序如下：</span></span><br><span class="line"><span class="comment">// arr:[1, 8, 5, 4, 7, 3, 9, 2, 6] </span></span><br><span class="line"><span class="comment">// ├── left: []</span></span><br><span class="line"><span class="comment">// │</span></span><br><span class="line"><span class="comment">// ├── pivot: 1</span></span><br><span class="line"><span class="comment">// │</span></span><br><span class="line"><span class="comment">// └── right:[8, 5, 4, 7, 3, 9, 2, 6]</span></span><br><span class="line"><span class="comment">//     │</span></span><br><span class="line"><span class="comment">//     ├── left: [5, 4, 7, 3, 2, 6]</span></span><br><span class="line"><span class="comment">//     │   │</span></span><br><span class="line"><span class="comment">//     │   ├── left: [4, 3, 2]</span></span><br><span class="line"><span class="comment">//     │   │   │</span></span><br><span class="line"><span class="comment">//     │   │   ├── left: [3, 2]</span></span><br><span class="line"><span class="comment">//     │   │   │   │ </span></span><br><span class="line"><span class="comment">//     │   │   │   ├── left: [2]</span></span><br><span class="line"><span class="comment">//     │   │   │   │</span></span><br><span class="line"><span class="comment">//     │   │   │   ├── pivot: 3</span></span><br><span class="line"><span class="comment">//     │   │   │   │</span></span><br><span class="line"><span class="comment">//     │   │   │   └── right: []</span></span><br><span class="line"><span class="comment">//     │   │   │    </span></span><br><span class="line"><span class="comment">//     │   │   ├── pivot: 4</span></span><br><span class="line"><span class="comment">//     │   │   │</span></span><br><span class="line"><span class="comment">//     │   │   └── right: []</span></span><br><span class="line"><span class="comment">//     │   │   </span></span><br><span class="line"><span class="comment">//     │   ├── pivot: 5</span></span><br><span class="line"><span class="comment">//     │   │</span></span><br><span class="line"><span class="comment">//     │   └── right: [7, 6]</span></span><br><span class="line"><span class="comment">//     │       │</span></span><br><span class="line"><span class="comment">//     │       ├── left: [6]</span></span><br><span class="line"><span class="comment">//     │       │</span></span><br><span class="line"><span class="comment">//     │       ├── pivot: 7</span></span><br><span class="line"><span class="comment">//     │       │</span></span><br><span class="line"><span class="comment">//     │       └── right: []</span></span><br><span class="line"><span class="comment">//     │ </span></span><br><span class="line"><span class="comment">//     ├── pivot: 8</span></span><br><span class="line"><span class="comment">//     │</span></span><br><span class="line"><span class="comment">//     └── right: [9]</span></span><br><span class="line"><span class="comment">//     </span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// 按上图拆分完毕后，从内到外拼接（递归）即可完成排序得到：[1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p><img src="../images/javascript/js_insert_sort.gif" title="插入排序原理图"></p><ol><li>将第一待排序序列第一个元素看做一个有序序列，把第二个元素到最后一个元素当成是未排序序列。</li><li>从头到尾依次扫描未排序序列，将扫描到的每个元素插入有序序列的适当位置。（如果待插入的元素与有序序列中的某个元素相等，则将待插入元素插入到相等元素的后面。）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertionSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = arr.length;</span><br><span class="line">  <span class="keyword">var</span> preIndex, current;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">    preIndex = i - <span class="number">1</span>;</span><br><span class="line">    current = arr[i];</span><br><span class="line">    <span class="keyword">while</span>(preIndex &gt;= <span class="number">0</span> &amp;&amp; arr[preIndex] &gt; current) &#123;</span><br><span class="line">      arr[preIndex+<span class="number">1</span>] = arr[preIndex];</span><br><span class="line">      preIndex--;</span><br><span class="line">    &#125;</span><br><span class="line">    arr[preIndex+<span class="number">1</span>] = current;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="二路归并排序"><a href="#二路归并排序" class="headerlink" title="二路归并排序"></a>二路归并排序</h2><p>将两个按值有序序列合并成一个按值有序序列<br><img src="../images/javascript/js_merge_sort.gif" title="二路归并排序原理图"><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">left, right</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = [],</span><br><span class="line">      il = <span class="number">0</span>,</span><br><span class="line">      ir = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (il &lt; left.length &amp;&amp; ir &lt; right.length) &#123;</span><br><span class="line">    <span class="keyword">if</span> (left[il] &lt; right[ir]) &#123;</span><br><span class="line">      result.push(left[il++]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result.push(right[ir++]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(left[il])&#123;</span><br><span class="line">    result.push(left[il++]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(right[ir])&#123;</span><br><span class="line">    result.push(right[ir++]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shellSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = arr.length,</span><br><span class="line">      temp,</span><br><span class="line">      gap = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(gap &lt; len/<span class="number">3</span>) &#123;          <span class="comment">//动态定义间隔序列</span></span><br><span class="line">    gap =gap*<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (gap; gap &gt; <span class="number">0</span>; gap = <span class="built_in">Math</span>.floor(gap/<span class="number">3</span>)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = gap; i &lt; len; i++) &#123;</span><br><span class="line">      temp = arr[i];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> j = i-gap; j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp; j-=gap) &#123;</span><br><span class="line">        arr[j+gap] = arr[j];</span><br><span class="line">      &#125;</span><br><span class="line">      arr[j+gap] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他常见应用"><a href="#其他常见应用" class="headerlink" title="其他常见应用"></a>其他常见应用</h2><h3 id="数字、英文排序"><a href="#数字、英文排序" class="headerlink" title="数字、英文排序"></a>数字、英文排序</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 顺序：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortArr</span> (<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.sort();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 或：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortArr</span> (<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 倒序：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortArr</span> (<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="中文姓名排序"><a href="#中文姓名排序" class="headerlink" title="中文姓名排序"></a>中文姓名排序</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 顺序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortNameArr</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b.localeCompare(a, <span class="string">'zh-Hans-CN'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 倒序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortNameArr</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.localeCompare(b, <span class="string">'zh-Hans-CN'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数组乱序"><a href="#数组乱序" class="headerlink" title="数组乱序"></a>数组乱序</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shuffle</span>(<span class="params">array</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">var</span> i = array.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">     <span class="keyword">var</span> j = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (i + <span class="number">1</span>));</span><br><span class="line">     <span class="keyword">var</span> temp = array[i];</span><br><span class="line">     array[i] = array[j];</span><br><span class="line">     array[j] = temp;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> array;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="Number数组中最大差值"><a href="#Number数组中最大差值" class="headerlink" title="Number数组中最大差值"></a>Number数组中最大差值</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMaxProfit</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> min = arr[<span class="number">0</span>], max = arr[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &lt; min) &#123;</span><br><span class="line">      min = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt; max) &#123;</span><br><span class="line">      max = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> max - min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="打印九九乘法表"><a href="#打印九九乘法表" class="headerlink" title="打印九九乘法表"></a>打印九九乘法表</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">1</span>; n &lt;= <span class="number">9</span>; n++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> m = <span class="number">1</span>; m &lt; n+<span class="number">1</span>; m++) &#123;</span><br><span class="line">    <span class="keyword">var</span> b = m * n;</span><br><span class="line">    <span class="built_in">document</span>.write(m + <span class="string">"×"</span> + n + <span class="string">"="</span> + b + <span class="string">" "</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;&lt;br/&gt;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="求数组交集和差级"><a href="#求数组交集和差级" class="headerlink" title="求数组交集和差级"></a>求数组交集和差级</h1><p>ES7方法：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> intersection = a.filter(<span class="function"><span class="params">v</span> =&gt;</span> b.includes(v))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> difference = a.concat(b).filter(<span class="function"><span class="params">v</span> =&gt;</span> !a.includes(v) || !b.includes(v))</span><br></pre></td></tr></table></figure></p><h1 id="字符串翻转"><a href="#字符串翻转" class="headerlink" title="字符串翻转"></a>字符串翻转</h1><h2 id="转换成array"><a href="#转换成array" class="headerlink" title="转换成array"></a>转换成array</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverseString</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(<span class="string">''</span>).reverse().join();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反向遍历"><a href="#反向遍历" class="headerlink" title="反向遍历"></a>反向遍历</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverseString</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> tmp = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = str.length - <span class="number">1</span>;i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    tmp += str[i];</span><br><span class="line">  <span class="keyword">return</span> tmp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="生成随机字符串"><a href="#生成随机字符串" class="headerlink" title="生成随机字符串"></a>生成随机字符串</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomString</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">'abcdefghijklmnopqrstuvwxyz0123456789'</span>;</span><br><span class="line">  <span class="keyword">var</span> tmp = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    tmp += str.charAt(<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*str.length));</span><br><span class="line">  <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="判断回文"><a href="#判断回文" class="headerlink" title="判断回文"></a>判断回文</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 算法思想：每次判断第一个字符和最后一个字符是否相等，然后取第二个字符到倒数第二个字符之间的字符串递归</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">palindrome</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// \W匹配任何非单词字符，即去除非正常字符。等价于“[^A-Za-z0-9_]”。</span></span><br><span class="line">  <span class="keyword">var</span> re = <span class="regexp">/[\W_]/g</span>;</span><br><span class="line">  <span class="comment">// 将字符串变成小写字符,并干掉除字母数字外的字符</span></span><br><span class="line">  <span class="keyword">var</span> lowRegStr = str.toLowerCase().replace(re, <span class="string">''</span>);</span><br><span class="line">  <span class="comment">// 如果字符串lowRegStr的length长度为0时，字符串即是palindrome</span></span><br><span class="line">  <span class="keyword">if</span>(lowRegStr.length === <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">// 如果字符串的第一个和最后一个字符不相同，那么字符串就不是palindrome</span></span><br><span class="line">  <span class="keyword">if</span>(lowRegStr[<span class="number">0</span>] !== lowRegStr[lowRegStr.length - <span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">//递归</span></span><br><span class="line">  <span class="keyword">return</span> palindrome(lowRegStr.slice(<span class="number">1</span>, lowRegStr.length - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="统计字符串中最多的字母"><a href="#统计字符串中最多的字母" class="headerlink" title="统计字符串中最多的字母"></a>统计字符串中最多的字母</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 算法思想：先遍历，将出现的字符和次数以object的形式输出；再obj遍历，输出次数最多的字符</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findMaxDuplicateChar</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(str.length == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> charObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!charObj[str.charAt(i)]) &#123;</span><br><span class="line">      charObj[str.charAt(i)] = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      charObj[str.charAt(i)] += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'charObj'</span>, charObj)</span><br><span class="line">  <span class="keyword">var</span> maxChar = <span class="string">''</span>,</span><br><span class="line">      maxValue = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> charObj) &#123; <span class="comment">// k为key, charObj[k]为value</span></span><br><span class="line">    <span class="keyword">if</span>(charObj[k] &gt;= maxValue) &#123;</span><br><span class="line">      maxChar = k;</span><br><span class="line">      maxValue = charObj[k];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> maxChar + <span class="string">'：'</span> + maxValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="阶乘"><a href="#阶乘" class="headerlink" title="阶乘"></a>阶乘</h1><p>1x2x3x4x5…</p><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorialize</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(num &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">if</span>(num == <span class="number">0</span> || num == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(num &gt; <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> num * factorialize(num - <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="非递归"><a href="#非递归" class="headerlink" title="非递归"></a>非递归</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorialize</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(num &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">if</span>(num == <span class="number">0</span> || num == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(num &gt; <span class="number">1</span>)</span><br><span class="line">    result *= num--;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="生成斐波那契数列"><a href="#生成斐波那契数列" class="headerlink" title="生成斐波那契数列"></a>生成斐波那契数列</h1><p>斐波那契数列（黄金分割数列）: 0、1、1、2、3、5、8、13、21、34，考察递归</p><h2 id="递归-1"><a href="#递归-1" class="headerlink" title="递归"></a>递归</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getfib</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (n &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> getfib(n - <span class="number">1</span>) + getfib(n - <span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibo</span>(<span class="params">len</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> fibo = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    fibo.push(getfib(i));</span><br><span class="line">  <span class="keyword">return</span> fibo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="非递归-1"><a href="#非递归-1" class="headerlink" title="非递归"></a>非递归</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFibonacci</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> fibarr = [];</span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(i &lt; n) &#123;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">      fibarr.push(i);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fibarr.push(fibarr[i - <span class="number">1</span>] + fibarr[i - <span class="number">2</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fibarr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h1><p>查找某个值是否在有序数组中，数组必须是有序的</p><h2 id="递归-2"><a href="#递归-2" class="headerlink" title="递归"></a>递归</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binary_search2</span>(<span class="params">arr, low, high, key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(low &gt; high)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">var</span> mid = <span class="built_in">parseInt</span>((low + high)/<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">if</span>(key == arr[mid])</span><br><span class="line">    <span class="keyword">return</span> mid;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key &gt; arr[mid])</span><br><span class="line">    <span class="keyword">return</span> binary_search2(arr, mid+<span class="number">1</span>, high, key);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(key &lt; arr[mid])</span><br><span class="line">    <span class="keyword">return</span> binary_search2(arr, low, mid<span class="number">-1</span>, key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="非递归-2"><a href="#非递归-2" class="headerlink" title="非递归"></a>非递归</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binary_search</span>(<span class="params">arr, key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> low = <span class="number">0</span>,</span><br><span class="line">      high = arr.length - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(low &lt;= high)&#123;</span><br><span class="line">    <span class="keyword">var</span> mid = <span class="built_in">parseInt</span>((high + low) / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (key == arr[mid]) &#123;</span><br><span class="line">      <span class="keyword">return</span>  mid;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(key &gt; arr[mid]) &#123;</span><br><span class="line">      low = mid + <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(key &lt; arr[mid]) &#123;</span><br><span class="line">      high = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="找出数组当中的质数"><a href="#找出数组当中的质数" class="headerlink" title="找出数组当中的质数"></a>找出数组当中的质数</h1><p>质数：也称素数，&gt;1, 有无限个。除1和它自身之外不能被其他数整除，如2、3、5、7等，否则称为合数。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 思想：m % n === 0, 等于0表示能整除，即不是质数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环生成一个100内的数组</span></span><br><span class="line"><span class="keyword">var</span> i, arr = [];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">  arr.push(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> getPrimes = arr.filter(<span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> flag = <span class="literal">true</span>; <span class="comment">// 定义一个boolean值，filter返回布尔值</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (el &lt; <span class="number">2</span>) &#123; <span class="comment">// 小于2的直接排除</span></span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 使用小于当前元素的数值去整除当前当前元素，有一个可以整除则跳出循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">2</span>; j &lt; el; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (el % j === <span class="number">0</span>) &#123;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> flag;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(getPrimes)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      前端常见的算法面试题
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>React官方CDN</title>
    <link href="http://pimichen.com/react/react%E5%AE%98%E6%96%B9cdn.html"/>
    <id>http://pimichen.com/react/react官方cdn.html</id>
    <published>2017-12-25T10:32:50.263Z</published>
    <updated>2017-12-25T10:33:17.408Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>开发版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script crossorigin src=&quot;https://unpkg.com/react@16/umd/react.development.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script crossorigin src=&quot;https://unpkg.com/react-dom@16/umd/react-dom.development.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>生产版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script crossorigin src=&quot;https://unpkg.com/react@16/umd/react.production.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script crossorigin src=&quot;https://unpkg.com/react-dom@16/umd/react-dom.production.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      React官方CDN
    
    </summary>
    
    
      <category term="React" scheme="http://pimichen.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>vue-router懒加载</title>
    <link href="http://pimichen.com/vue/vue-router%E8%B5%96%E5%8A%A0%E8%BD%BD%E5%86%99%E6%B3%95.html"/>
    <id>http://pimichen.com/vue/vue-router赖加载写法.html</id>
    <published>2017-12-22T09:44:25.215Z</published>
    <updated>2017-12-22T09:50:40.258Z</updated>
    
    <content type="html"><![CDATA[<p>默认的加载模式：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">      component: HelloWorld</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>但当项目过大时需要使用懒加载方法</p><p>用法1：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HelloWorld = <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/HelloWorld'</span>], resolve)</span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">      component: HelloWorld</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>用法2：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HelloWorld = <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/HelloWorld'</span>).then(<span class="function">(<span class="params"><span class="built_in">module</span></span>) =&gt;</span> resolve(<span class="built_in">module</span>))</span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">      component: HelloWorld</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>用法3：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HelloWorld = <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>.ensure([], () =&gt; resolve(<span class="built_in">require</span>(<span class="string">'@/components/HelloWorld'</span>)), <span class="string">'HelloWorld'</span>)</span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">      component: HelloWorld</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      vue-router懒加载的几种写法
    
    </summary>
    
    
      <category term="Vue" scheme="http://pimichen.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>初识requirejs</title>
    <link href="http://pimichen.com/javascript/%E5%88%9D%E8%AF%86%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8A%A0%E8%BD%BDrequirejs.html"/>
    <id>http://pimichen.com/javascript/初识模块化加载requirejs.html</id>
    <published>2017-12-20T09:57:12.826Z</published>
    <updated>2017-12-21T03:06:01.274Z</updated>
    
    <content type="html"><![CDATA[<p>在浏览器中可以作为js文件的模块加载器，也可以用在Node和Rhino环境。</p><h2 id="初识requirejs"><a href="#初识requirejs" class="headerlink" title="初识requirejs"></a>初识requirejs</h2><p>先看一个小demo：</p><p>index.html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"a.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>body<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>a.js:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"it works"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fun1();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或 使用块作用域来申明function防止污染全局变量</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"it works"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fun1();</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure></p><p>运行结果：<br>alert执行的时候，页面上的span元素还未显示。这是因为js阻塞浏览器渲染，导致body内容未能被读取。</p><p>requirejs写法:<br>先去<a href="http://requirejs.org" target="_blank" rel="noopener">require官网</a>下载js<br>index.html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="built_in">require</span>([<span class="string">"a"</span>]);</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>body<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>a.js:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">func1</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      alert(<span class="string">'it works'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    func1();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>运行结果：<br>alert执行的时候，页面能正常显示body了</p><p>这个时候可以知道require的优点：<br>1.防止js加载阻塞页面渲染<br>2.管理模块之间的依赖性，便于代码的编写和维护，防止出现如下丑陋的场景。这种写法需要将依赖最大的放在最后加载，如j.js依赖前面的js，就必须放到最后，当关系很复杂时，极难维护。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"a.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"b.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"c.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"d.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"e.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"f.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"g.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"h.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"i.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"j.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="基本API"><a href="#基本API" class="headerlink" title="基本API"></a>基本API</h2><p>require会定义三个变量：define、require、requirejs，require = requirejs，一般使用require更简短</p><ul><li><p>define 用来定义一个模块<br>define后面也可以增加参数[“jqueyr”],即保证jquery加载完成后读取该js文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">define([&quot;jquery&quot;], function ($) &#123;</span><br><span class="line">    console.log(&apos;it is loaded&apos;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>require 加载依赖模块，并执行加载后的回调函数</p></li></ul><p>require([“js/a.js”, “js/b.js”])的第一个参数时一个数组，即加载的脚本，第二个参数时callback，处理加载完毕后的回调<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>([<span class="string">"js/a.js"</span>, <span class="string">"js/b.js"</span>], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'load finished'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="加载文件"><a href="#加载文件" class="headerlink" title="加载文件"></a>加载文件</h2><p>使用require()来加载模块的使用只能加载本地js，但如果需要加载服务器、其他网站或CDN，就需要用require.config来配置加载<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"jquery"</span>: [<span class="string">"https://cdn.bootcss.com/jquery/2.2.4/jquery"</span>], <span class="comment">// 或省略中括号</span></span><br><span class="line">        <span class="string">"bootstrap"</span>: [<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>([<span class="string">"jquery"</span>, <span class="string">"js/a.js"</span>], <span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'load finished'</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>require.config 用来配置加载位置，给模块起一个更短更好记的名字，配置别名之后就可以再require中使用别名了。<br>注意：require中的可以带.js后缀；paths中的路径不能带.js后缀，否则会报错，paths中的每个别名对应的js如果只有一个时可以省略中括号；</p><p>require.config 中也可以用来配置本地的js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"jquery"</span>: [<span class="string">"https://cdn.bootcss.com/jquery/2.2.4/jquery"</span>],</span><br><span class="line">        <span class="string">"bootstrap"</span>: [<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap"</span>],</span><br><span class="line">        <span class="string">"a"</span>: <span class="string">"js/a"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>([<span class="string">"jquery"</span>, <span class="string">"a"</span>], <span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'load finished'</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>最终渲染成下面这样：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> charset=<span class="string">"utf-8"</span> <span class="keyword">async</span>=<span class="string">""</span> data-requirecontext=<span class="string">"_"</span> data-requiremodule=<span class="string">"jquery"</span> src=<span class="string">"http://cdn.bootcss.com/jquery/2.2.4/jquery.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> charset=<span class="string">"utf-8"</span> <span class="keyword">async</span>=<span class="string">""</span> data-requirecontext=<span class="string">"_"</span> data-requiremodule=<span class="string">"a"</span> src=<span class="string">"./a.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>通过require.config配置模块名称时可以配置多个路径，比如配置一个CDN路径，再配一个本地的库<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"jquery"</span>: [<span class="string">"https://cdn.bootcss.com/jquery/2.2.4/jquery"</span>, <span class="string">'js/jquery'</span>],</span><br><span class="line">        <span class="string">"a"</span>: <span class="string">"js/a"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">require</span>([<span class="string">"jquery"</span>, <span class="string">"a"</span>], <span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'load finished'</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>当paths中都是本地路径时，可以指定一个baseUrl表示目录<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    baseUrl: <span class="string">"js/lib"</span>,</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"jquery"</span>: jquery<span class="string">',</span></span><br><span class="line"><span class="string">        "a": "a"</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">require(["jquery", "a"], function ($) &#123;</span></span><br><span class="line"><span class="string">    $(function () &#123;</span></span><br><span class="line"><span class="string">        console.log('</span>load finished<span class="string">');</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure></p><p>上例中require的callback中的参数$是jquery模块的输出变量，如果依赖多个模块，可以依次写入多个参数。将需要输出的模块写在前面，位置不能错乱。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>([<span class="string">"jquery"</span>, <span class="string">"underscore"</span>, <span class="string">"js/a"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">$, _</span>) </span>&#123;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        _.each([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], alert);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>require.config配置如果在每个页面中都加入，显然会十分不雅，requirejs提供了一种叫”主数据“的功能，我们首先创建一个main.js：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"jquery"</span>: [<span class="string">"https://cdn.bootcss.com/jquery/2.2.4/jquery"</span>, <span class="string">'js/jquery'</span>],</span><br><span class="line">        <span class="string">"a"</span>: <span class="string">"js/a"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>然后在页面中使用下面的方式来使用requirejs：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script data-main=<span class="string">"js/main src="</span>js/<span class="built_in">require</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></p><p>data-main属性表示指定的js将在加载完require.js后处理，我们把require.config的配置加入到data-main后，就可以使每一个页面都使用这个配置，然后页面中就可以直接使用require来加载所有的短模块名<br>data-main还有一个功能，当script标签指定data-main属性时，require会默认将data-main指定的js为根路径。如上面的data-main=”js/main”设定后，我们在直接使用require([“jquery”])，而不是require([“js/jquery”])，require会自动加载js/jquery这个文件，而不是jquery.js。<br>相当于默认配置了：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    baseUrl: <span class="string">'js'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="第三方模块"><a href="#第三方模块" class="headerlink" title="第三方模块"></a>第三方模块</h2><p>通过require加载的模块一般都要符合AMD规范及使用define来申明模块，但是部分时候需要加载非AMD规范的js，这时候就需要用到另一个功能：shim，中文意思”垫“.</p><p>1、非AMD模块输出，例如，在老版本的jquery中，是没有继承AMD规范的，所以不能只能require([“jquery”])，这个时候就需要用到 shim，比如要使用underscore类库，但是它并没有实现AMD规范，可以这样配置<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">requier.config(&#123;</span><br><span class="line">    shim: &#123;</span><br><span class="line">        <span class="string">"underscore"</span>: &#123;</span><br><span class="line">            <span class="keyword">export</span>: <span class="string">"_"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>这样配置后，我们就可以再其他模块中引用underscore模块：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>([<span class="string">"underscore"</span>], <span class="function"><span class="keyword">function</span> (<span class="params">_</span>) </span>&#123;</span><br><span class="line">    _.each([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], alert)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>2、插件形式的非AMD模块，我们经常会用到jquery的插件，而这些插件基本都不符合AMD规范比如，jquery的form插件，这时候就需要将form插件”垫“到jquery中<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    shim: &#123;</span><br><span class="line">        <span class="string">"underscore"</span> : &#123;</span><br><span class="line">            exports : <span class="string">"_"</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"jquery.form"</span> : &#123;</span><br><span class="line">            deps : [<span class="string">"jquery"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>也可以简写成：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config(&#123;</span><br><span class="line">    shim: &#123;</span><br><span class="line">        <span class="string">"underscore"</span> : &#123;</span><br><span class="line">            exports : <span class="string">"_"</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"jquery.form"</span> : [<span class="string">"jquery"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>exports表明该模块外部调用时的名称，deps数组表示该模块的依赖</p><p>这样配置之后我们就可以使用加载插件后的jquery了<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.config([<span class="string">"jquery"</span>, <span class="string">"jquery.form"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">"#form"</span>).ajaxSubmit(&#123;...&#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><blockquote><p>来源：<a href="http://www.runoob.com/w3cnote/requirejs-tutorial-1.html" target="_blank" rel="noopener">runoob文档</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      初识JS模块化工具requirejs
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://pimichen.com/tags/javascript/"/>
    
  </entry>
  
</feed>
